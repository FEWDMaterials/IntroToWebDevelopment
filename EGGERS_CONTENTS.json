{"home":{"content":"# Frontend Crash Course!\n------\n\nHello, [Wrold](https://medium.com/@the_taqquikarim/console-log-hello-wrold-3e3abeb44396)! Welcome!\n\nIn this class, we will cover some of the basics of web development. This will include discussion on stuff like HTML, CSS and deployment to the web.\n\n### Objectives\n\n* write HTML from scratch\n* use CSS to style our HTML\n* deploy our page to the internet\n* understand bootstrap + other frontend frameworks\n\n### Topic Breakdown\n\n#### Setting up your environment\n1. Getting Started: set up your dev environment.\n2. Good to Knows: Sublime tricks + Newsletters.\n\n#### Guts of an HTML Request\n1. Internets, how does it work?!\n2. File structure, traversals, and you\n3. Let's create our first website (folder)\n\n#### All about HTML\n1. Basic HTML Structure\n2. Common HTML Tags\n3. How to Validate HTML\n\nBRB...\n\n----\n#### DEPLOY TO THE INTERNETS!!!\n----\nK, we're back.\n\n#### Styling with CSS\n1. Bro, do you even CSS?\n2. Putting your money where your .mouth is\n\n#### Frontend frameworks\n1. Building Websites Quickly with Bootstrap\n2. Bootstrap on steriods: bootstrapCDN, bootswatch, and fewd.us/zip\n\nHere's a panda sliding on things:\n\n![Pandas slide on things](https://media.giphy.com/media/AqZjlaUAjMRB6/giphy.gif)\n","idx":0},"setting-up-your-environment":{"content":"# Setting up your environment\n---\n\nPlease download and install the following programs if you haven't done so already:\n\n1. [Sublime Text](http://www.sublimetext.com/3) &mdash; we use this to write our programs\n\n2. [Chrome](http://www.google.com/chrome/?) &mdash; we use this to test our programs","idx":1},"guts-of-a-http-request":{"content":"\n## Guts of an HTML Request\n---\n\n### Question\nWhat happens when you type in [http://www.google.com](http://www.google.com) into the web browser?\n\n### Answer\nA **lot** of background tasks get executed.\n\n1. Browser has no idea what `google` is. It begins by looking up your web url in something called the **DNS**: the *Domain Name System*.\n2. The DNS maps to a specific **IP address**, a collection of numbers that works much like your phone number works.\n3. The browser now knows *where* to send a **HTTP request**. It does this.\n4. After a little while, a **response** comes back to the request sent. \n5. The browser parses this response and figures out what to do with this data (ie: should I draw it in the window? does this need to be download? Streamed? etc)\n6. **???**\n7. Profit\n\n### Question\n\nWhere does this response comes from?\n\n### Answer \n\nA little ol' thing called a **server**.\n\nServers are basically computers that have __one__ specific job: listen for requests from computers like yours. \n\nBased on the request, the server determines what to do: \n* should it respond at all? \n* Should it send back an image? \n* A video? \n* A webpage? \n* Etc.\n\n### Question\n\nWhy does it matter even? Why do __we__, aspiring web developers, even care what the server does?\n\n### Answer\n\nThe way a server stores data and responds to requests gives us valuable insight into how we can build websites of our own...in our own machines.\n\n","idx":2},"__list__":["home","setting-up-your-environment","guts-of-a-http-request"]}